package api.utilities;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class XlUtilities {
	
	public FileInputStream fi;
    public FileOutputStream fo;
    public XSSFWorkbook workbook;
    public XSSFSheet sheet;
    public XSSFRow row;
    public XSSFCell cell;
    public CellStyle style;
    String path=null;

    public XlUtilities(String path)
    {
        this.path=path;
    }

    public int getRowCount(String sheetname) throws IOException
    {
        fi=new FileInputStream(path);
        workbook=new XSSFWorkbook(fi);
        sheet=workbook.getSheet(sheetname);
        int rowcount=sheet.getLastRowNum();
        workbook.close();
        fi.close();
        return rowcount;
    }

    public int getCellCount(String sheetname,int rowcount) throws Exception
    {
        fi=new FileInputStream(path);
        workbook=new XSSFWorkbook(fi);
        sheet=workbook.getSheet(sheetname);
        int cellcount=sheet.getLastRowNum();
        workbook.close();
        fi.close();
        return cellcount;

    }

    public String getCellData(String sheetname,int rownum,int cellnum) throws Exception
    {
        fi=new FileInputStream(path);
        workbook=new XSSFWorkbook(fi);
        sheet=workbook.getSheet(sheetname);
        row=sheet.getRow(rownum);
        cell=row.getCell(cellnum);


        DataFormatter formatter=new DataFormatter();
        String data;
        data=formatter.formatCellValue(cell);
        workbook.close();
        fi.close();
        return data;

}
}
